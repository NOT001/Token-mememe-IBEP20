{
	"id": "ef87e1ec580370b0ee0a470a269c9dcd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n  function symbol() external view returns (string memory);\r\n  function name() external view returns (string memory);\r\n  function getOwner() external view returns (address);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Context {\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this;  \r\n    msg.data;\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n    return c;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor() public {\r\n    _name = \"mememe\";\r\n    _symbol = \"GG\";\r\n    _decimals = 18;\r\n    _totalSupply = 300000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}\r\n//"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Token.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Token.sol\":3514:7610  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Token.sol\":3844:4088  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"Token.sol\":2729:2746  address msgSender */\n  0x00\n    /* \"Token.sol\":2749:2761  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"Token.sol\":2749:2759  _msgSender */\n  tag_8\n    /* \"Token.sol\":2749:2761  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"Token.sol\":2768:2774  _owner */\n  0x00\n    /* \"Token.sol\":2768:2786  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Token.sol\":2798:2841  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Token.sol\":2768:2786  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Token.sol\":2798:2841  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Token.sol\":2768:2774  _owner */\n  dup3\n  swap1\n    /* \"Token.sol\":2798:2841  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"Token.sol\":3872:3888  _name = \"mememe\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  shl(0xd0, 0x6d656d656d65)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n  dup2\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"Token.sol\":3895:3909  _symbol = \"GG\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x02\n  dup1\n  dup3\n  mstore\n  shl(0xf0, 0x4747)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"Token.sol\":3895:3902  _symbol */\n  0x05\n  swap2\n    /* \"Token.sol\":3895:3909  _symbol = \"GG\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"Token.sol\":3916:3925  _decimals */\n  0x04\n    /* \"Token.sol\":3916:3930  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Token.sol\":3928:3930  18 */\n  0x12\n    /* \"Token.sol\":3916:3930  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"Token.sol\":3952:3979  300000000000000000000000000 */\n  0xf8277896582678ac000000\n    /* \"Token.sol\":3937:3949  _totalSupply */\n  0x03\n    /* \"Token.sol\":3937:3979  _totalSupply = 300000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"Token.sol\":3996:4006  msg.sender */\n  caller\n    /* \"Token.sol\":3916:3925  _decimals */\n  0x00\n    /* \"Token.sol\":3986:4007  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"Token.sol\":3916:3930  _decimals = 18 */\n  0x01\n    /* \"Token.sol\":3986:4007  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Token.sol\":3986:4022  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"Token.sol\":4036:4082  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"Token.sol\":3996:4006  msg.sender */\n  swap3\n  swap4\n    /* \"Token.sol\":3916:3925  _decimals */\n  swap2\n  swap3\n    /* \"Token.sol\":4036:4082  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"Token.sol\":3514:7610  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"Token.sol\":1007:1099  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"Token.sol\":1083:1093  msg.sender */\n  caller\n    /* \"Token.sol\":1007:1099  function _msgSender() internal view returns (address payable) {\r... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"Token.sol\":3514:7610  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token.sol\":3514:7610  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Token.sol\":3514:7610  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Token.sol\":4353:4432  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Token.sol\":4353:4432  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token.sol\":4935:5079  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":4935:5079  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Token.sol\":4438:4525  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Token.sol\":5085:5377  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5085:5377  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"Token.sol\":4179:4258  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Token.sol\":5383:5583  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5383:5583  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"Token.sol\":4531:4637  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"Token.sol\":4531:4637  function balanceOf(address account) external view returns (uint256) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"Token.sol\":3047:3177  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Token.sol\":4094:4173  function getOwner() external view returns (address) {\r... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Token.sol\":2853:2926  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_46\n      tag_49\n      jump\t// in\n        /* \"Token.sol\":4264:4347  function symbol() external view returns (string memory) {\r... */\n    tag_13:\n      tag_22\n      tag_51\n      jump\t// in\n        /* \"Token.sol\":5846:5966  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n        /* \"Token.sol\":5846:5966  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      calldataload\n      tag_58\n      jump\t// in\n        /* \"Token.sol\":5589:5840  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5589:5840  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"Token.sol\":4643:4793  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":4643:4793  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"Token.sol\":4799:4929  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":4799:4929  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_67\n      jump\t// in\n        /* \"Token.sol\":3183:3286  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"Token.sol\":3183:3286  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"Token.sol\":4353:4432  function name() external view returns (string memory) {\r... */\n    tag_23:\n        /* \"Token.sol\":4421:4426  _name */\n      0x06\n        /* \"Token.sol\":4414:4426  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Token.sol\":4392:4405  string memory */\n      0x60\n      swap4\n        /* \"Token.sol\":4414:4426  return _name */\n      swap1\n      swap3\n        /* \"Token.sol\":4421:4426  _name */\n      swap1\n      swap2\n        /* \"Token.sol\":4414:4426  return _name */\n      dup4\n      add\n        /* \"Token.sol\":4421:4426  _name */\n      dup3\n        /* \"Token.sol\":4414:4426  return _name */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Token.sol\":4353:4432  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":4935:5079  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_30:\n        /* \"Token.sol\":5003:5007  bool */\n      0x00\n        /* \"Token.sol\":5016:5055  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"Token.sol\":5025:5037  _msgSender() */\n      tag_77\n        /* \"Token.sol\":5025:5035  _msgSender */\n      tag_78\n        /* \"Token.sol\":5025:5037  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"Token.sol\":5039:5046  spender */\n      dup5\n        /* \"Token.sol\":5048:5054  amount */\n      dup5\n        /* \"Token.sol\":5016:5024  _approve */\n      tag_79\n        /* \"Token.sol\":5016:5055  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"Token.sol\":5069:5073  true */\n      0x01\n        /* \"Token.sol\":4935:5079  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":4438:4525  function totalSupply() external view returns (uint256) {\r... */\n    tag_32:\n        /* \"Token.sol\":4507:4519  _totalSupply */\n      sload(0x03)\n        /* \"Token.sol\":4438:4525  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":5085:5377  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_35:\n        /* \"Token.sol\":5176:5180  bool */\n      0x00\n        /* \"Token.sol\":5189:5225  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"Token.sol\":5199:5205  sender */\n      dup5\n        /* \"Token.sol\":5207:5216  recipient */\n      dup5\n        /* \"Token.sol\":5218:5224  amount */\n      dup5\n        /* \"Token.sol\":5189:5198  _transfer */\n      tag_83\n        /* \"Token.sol\":5189:5225  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"Token.sol\":5232:5353  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"Token.sol\":5241:5247  sender */\n      dup5\n        /* \"Token.sol\":5249:5261  _msgSender() */\n      tag_85\n        /* \"Token.sol\":5249:5259  _msgSender */\n      tag_78\n        /* \"Token.sol\":5249:5261  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"Token.sol\":5263:5352  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"Token.sol\":5301:5307  amount */\n      dup6\n        /* \"Token.sol\":5263:5352  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5263:5282  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":5263:5274  _allowances */\n      0x02\n        /* \"Token.sol\":5263:5282  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Token.sol\":5283:5295  _msgSender() */\n      tag_87\n        /* \"Token.sol\":5283:5293  _msgSender */\n      tag_78\n        /* \"Token.sol\":5283:5295  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5263:5296  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Token.sol\":5263:5352  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"Token.sol\":5263:5300  _allowances[sender][_msgSender()].sub */\n      tag_88\n        /* \"Token.sol\":5263:5352  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_86:\n        /* \"Token.sol\":5232:5240  _approve */\n      tag_79\n        /* \"Token.sol\":5232:5353  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"Token.sol\":5367:5371  true */\n      0x01\n        /* \"Token.sol\":5085:5377  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":4179:4258  function decimals() external view returns (uint8) {\r... */\n    tag_37:\n        /* \"Token.sol\":4243:4252  _decimals */\n      and(0xff, sload(0x04))\n        /* \"Token.sol\":4179:4258  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":5383:5583  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_40:\n        /* \"Token.sol\":5463:5467  bool */\n      0x00\n        /* \"Token.sol\":5476:5559  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"Token.sol\":5485:5497  _msgSender() */\n      tag_92\n        /* \"Token.sol\":5485:5495  _msgSender */\n      tag_78\n        /* \"Token.sol\":5485:5497  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"Token.sol\":5499:5506  spender */\n      dup5\n        /* \"Token.sol\":5508:5558  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_86\n        /* \"Token.sol\":5547:5557  addedValue */\n      dup6\n        /* \"Token.sol\":5508:5519  _allowances */\n      0x02\n        /* \"Token.sol\":5508:5533  _allowances[_msgSender()] */\n      0x00\n        /* \"Token.sol\":5520:5532  _msgSender() */\n      tag_94\n        /* \"Token.sol\":5520:5530  _msgSender */\n      tag_78\n        /* \"Token.sol\":5520:5532  _msgSender() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5508:5533  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Token.sol\":5508:5542  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Token.sol\":5508:5558  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"Token.sol\":5508:5546  _allowances[_msgSender()][spender].add */\n      tag_95\n        /* \"Token.sol\":5508:5558  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"Token.sol\":4531:4637  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":4613:4631  _balances[account] */\n      and\n        /* \"Token.sol\":4590:4597  uint256 */\n      0x00\n        /* \"Token.sol\":4613:4631  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":4613:4622  _balances */\n      0x01\n        /* \"Token.sol\":4613:4631  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Token.sol\":4531:4637  function balanceOf(address account) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Token.sol\":3047:3177  function renounceOwnership() public onlyOwner {\r... */\n    tag_45:\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      tag_98\n        /* \"Token.sol\":2978:2988  _msgSender */\n      tag_78\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"Token.sol\":2968:2974  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Token.sol\":2968:2990  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Token.sol\":2960:3027  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"Token.sol\":3142:3143  0 */\n      0x00\n        /* \"Token.sol\":3126:3132  _owner */\n      dup1\n      sload\n        /* \"Token.sol\":3105:3145  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":3126:3132  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Token.sol\":3105:3145  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Token.sol\":3142:3143  0 */\n      dup4\n      swap1\n        /* \"Token.sol\":3105:3145  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Token.sol\":3169:3170  0 */\n      0x00\n        /* \"Token.sol\":3152:3171  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Token.sol\":3047:3177  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"Token.sol\":4094:4173  function getOwner() external view returns (address) {\r... */\n    tag_47:\n        /* \"Token.sol\":4137:4144  address */\n      0x00\n        /* \"Token.sol\":4160:4167  owner() */\n      tag_102\n        /* \"Token.sol\":4160:4165  owner */\n      tag_49\n        /* \"Token.sol\":4160:4167  owner() */\n      jump\t// in\n    tag_102:\n        /* \"Token.sol\":4153:4167  return owner() */\n      swap1\n      pop\n        /* \"Token.sol\":4094:4173  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":2853:2926  function owner() public view returns (address) {\r... */\n    tag_49:\n        /* \"Token.sol\":2891:2898  address */\n      0x00\n        /* \"Token.sol\":2914:2920  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Token.sol\":2853:2926  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":4264:4347  function symbol() external view returns (string memory) {\r... */\n    tag_51:\n        /* \"Token.sol\":4334:4341  _symbol */\n      0x05\n        /* \"Token.sol\":4327:4341  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Token.sol\":4305:4318  string memory */\n      0x60\n      swap4\n        /* \"Token.sol\":4327:4341  return _symbol */\n      swap1\n      swap3\n        /* \"Token.sol\":4334:4341  _symbol */\n      swap1\n      swap2\n        /* \"Token.sol\":4327:4341  return _symbol */\n      dup4\n      add\n        /* \"Token.sol\":4334:4341  _symbol */\n      dup3\n        /* \"Token.sol\":4327:4341  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n        /* \"Token.sol\":5846:5966  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_58:\n        /* \"Token.sol\":5902:5906  bool */\n      0x00\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      tag_109\n        /* \"Token.sol\":2978:2988  _msgSender */\n      tag_78\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"Token.sol\":2968:2974  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Token.sol\":2968:2990  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Token.sol\":2960:3027  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_110:\n        /* \"Token.sol\":5915:5942  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"Token.sol\":5921:5933  _msgSender() */\n      tag_113\n        /* \"Token.sol\":5921:5931  _msgSender */\n      tag_78\n        /* \"Token.sol\":5921:5933  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"Token.sol\":5935:5941  amount */\n      dup4\n        /* \"Token.sol\":5915:5920  _mint */\n      tag_114\n        /* \"Token.sol\":5915:5942  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"Token.sol\":5956:5960  true */\n      0x01\n        /* \"Token.sol\":5846:5966  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token.sol\":5589:5840  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_61:\n        /* \"Token.sol\":5674:5678  bool */\n      0x00\n        /* \"Token.sol\":5687:5816  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_76\n        /* \"Token.sol\":5696:5708  _msgSender() */\n      tag_117\n        /* \"Token.sol\":5696:5706  _msgSender */\n      tag_78\n        /* \"Token.sol\":5696:5708  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"Token.sol\":5710:5717  spender */\n      dup5\n        /* \"Token.sol\":5719:5815  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_86\n        /* \"Token.sol\":5758:5773  subtractedValue */\n      dup6\n        /* \"Token.sol\":5719:5815  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"Token.sol\":5719:5730  _allowances */\n      0x02\n        /* \"Token.sol\":5719:5744  _allowances[_msgSender()] */\n      0x00\n        /* \"Token.sol\":5731:5743  _msgSender() */\n      tag_119\n        /* \"Token.sol\":5731:5741  _msgSender */\n      tag_78\n        /* \"Token.sol\":5731:5743  _msgSender() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":5719:5744  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Token.sol\":5719:5753  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Token.sol\":5719:5815  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"Token.sol\":5719:5757  _allowances[_msgSender()][spender].sub */\n      tag_88\n        /* \"Token.sol\":5719:5815  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"Token.sol\":4643:4793  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_64:\n        /* \"Token.sol\":4714:4718  bool */\n      0x00\n        /* \"Token.sol\":4727:4769  _transfer(_msgSender(), recipient, amount) */\n      tag_76\n        /* \"Token.sol\":4737:4749  _msgSender() */\n      tag_122\n        /* \"Token.sol\":4737:4747  _msgSender */\n      tag_78\n        /* \"Token.sol\":4737:4749  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"Token.sol\":4751:4760  recipient */\n      dup5\n        /* \"Token.sol\":4762:4768  amount */\n      dup5\n        /* \"Token.sol\":4727:4736  _transfer */\n      tag_83\n        /* \"Token.sol\":4727:4769  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Token.sol\":4799:4929  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":4896:4914  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Token.sol\":4873:4880  uint256 */\n      0x00\n        /* \"Token.sol\":4896:4914  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":4896:4907  _allowances */\n      0x02\n        /* \"Token.sol\":4896:4914  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Token.sol\":4896:4923  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Token.sol\":4799:4929  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Token.sol\":3183:3286  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_70:\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      tag_125\n        /* \"Token.sol\":2978:2988  _msgSender */\n      tag_78\n        /* \"Token.sol\":2978:2990  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"Token.sol\":2968:2974  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Token.sol\":2968:2990  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Token.sol\":2960:3027  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"Token.sol\":3252:3280  _transferOwnership(newOwner) */\n      tag_128\n        /* \"Token.sol\":3271:3279  newOwner */\n      dup2\n        /* \"Token.sol\":3252:3270  _transferOwnership */\n      tag_129\n        /* \"Token.sol\":3252:3280  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"Token.sol\":3183:3286  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Token.sol\":1007:1099  function _msgSender() internal view returns (address payable) {\r... */\n    tag_78:\n        /* \"Token.sol\":1083:1093  msg.sender */\n      caller\n        /* \"Token.sol\":1007:1099  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":7059:7379  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":7149:7168  owner != address(0) */\n      dup4\n      and\n        /* \"Token.sol\":7141:7209  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":7224:7245  spender != address(0) */\n      dup3\n      and\n        /* \"Token.sol\":7216:7284  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":7293:7311  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Token.sol\":7293:7304  _allowances */\n      0x02\n        /* \"Token.sol\":7293:7311  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Token.sol\":7293:7320  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Token.sol\":7293:7329  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Token.sol\":7341:7373  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Token.sol\":7059:7379  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":5972:6421  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6066:6086  sender != address(0) */\n      dup4\n      and\n        /* \"Token.sol\":6058:6128  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6143:6166  recipient != address(0) */\n      dup3\n      and\n        /* \"Token.sol\":6135:6206  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"Token.sol\":6235:6306  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"Token.sol\":6257:6263  amount */\n      dup2\n        /* \"Token.sol\":6235:6306  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6235:6252  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":6235:6244  _balances */\n      0x01\n        /* \"Token.sol\":6235:6252  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Token.sol\":6235:6306  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"Token.sol\":6235:6256  _balances[sender].sub */\n      tag_88\n        /* \"Token.sol\":6235:6306  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6215:6232  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":6215:6224  _balances */\n      0x01\n        /* \"Token.sol\":6215:6232  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Token.sol\":6215:6306  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Token.sol\":6336:6356  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Token.sol\":6336:6368  _balances[recipient].add(amount) */\n      tag_138\n      swap1\n        /* \"Token.sol\":6361:6367  amount */\n      dup3\n        /* \"Token.sol\":6336:6368  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"Token.sol\":6336:6360  _balances[recipient].add */\n      tag_95\n        /* \"Token.sol\":6336:6368  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6313:6333  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Token.sol\":6313:6322  _balances */\n      0x01\n        /* \"Token.sol\":6313:6333  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Token.sol\":6313:6368  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Token.sol\":6380:6415  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Token.sol\":6313:6333  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Token.sol\":6380:6415  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Token.sol\":5972:6421  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":1532:1708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"Token.sol\":1618:1625  uint256 */\n      0x00\n        /* \"Token.sol\":1650:1662  errorMessage */\n      dup2\n        /* \"Token.sol\":1642:1648  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Token.sol\":1634:1663  require(b <= a, errorMessage) */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Token.sol\":1634:1663  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n      pop\n      pop\n        /* \"Token.sol\":1682:1687  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Token.sol\":1532:1708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"Token.sol\":1225:1390  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_95:\n        /* \"Token.sol\":1283:1290  uint256 */\n      0x00\n        /* \"Token.sol\":1311:1316  a + b */\n      dup3\n      dup3\n      add\n        /* \"Token.sol\":1331:1337  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Token.sol\":1323:1369  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"Token.sol\":1383:1384  c */\n      swap4\n        /* \"Token.sol\":1225:1390  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":6427:6717  function _mint(address account, uint256 amount) internal {\r... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6499:6520  account != address(0) */\n      dup3\n      and\n        /* \"Token.sol\":6491:6556  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"Token.sol\":6580:6592  _totalSupply */\n      sload(0x03)\n        /* \"Token.sol\":6580:6604  _totalSupply.add(amount) */\n      tag_149\n      swap1\n        /* \"Token.sol\":6597:6603  amount */\n      dup3\n        /* \"Token.sol\":6580:6604  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"Token.sol\":6580:6596  _totalSupply.add */\n      tag_95\n        /* \"Token.sol\":6580:6604  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_149:\n        /* \"Token.sol\":6565:6577  _totalSupply */\n      0x03\n        /* \"Token.sol\":6565:6604  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6632:6650  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Token.sol\":6632:6641  _balances */\n      0x01\n        /* \"Token.sol\":6632:6650  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Token.sol\":6632:6662  _balances[account].add(amount) */\n      tag_150\n      swap1\n        /* \"Token.sol\":6655:6661  amount */\n      dup3\n        /* \"Token.sol\":6632:6662  _balances[account].add(amount) */\n      0xffffffff\n        /* \"Token.sol\":6632:6654  _balances[account].add */\n      tag_95\n        /* \"Token.sol\":6632:6662  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":6611:6629  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Token.sol\":6611:6620  _balances */\n      0x01\n        /* \"Token.sol\":6611:6629  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Token.sol\":6611:6662  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Token.sol\":6674:6711  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"Token.sol\":6611:6629  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"Token.sol\":6674:6711  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Token.sol\":6427:6717  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":3292:3507  function _transferOwnership(address newOwner) internal {\r... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Token.sol\":3362:3384  newOwner != address(0) */\n      dup2\n      and\n        /* \"Token.sol\":3354:3427  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"Token.sol\":3460:3466  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Token.sol\":3439:3477  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Token.sol\":3460:3466  _owner */\n      swap3\n      and\n      swap2\n        /* \"Token.sol\":3439:3477  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Token.sol\":3484:3490  _owner */\n      0x00\n        /* \"Token.sol\":3484:3501  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Token.sol\":3292:3507  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820a66d928d3c3f84e40a48a38672737eb8d2e01f9974a272d53248a2c61bb0d2c564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100246001600160e01b0361013016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350604080518082019091526006808252656d656d656d6560d01b60209092019182526100999181610135565b5060408051808201909152600280825261474760f01b60209092019182526100c391600591610135565b506004805460ff191660121790556af8277896582678ac0000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101cd565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017657805160ff19168380011785556101a3565b828001600101855582156101a3579182015b828111156101a3578251825591602001919060010190610188565b506101af9291506101b3565b5090565b61013291905b808211156101af57600081556001016101b9565b610e56806101dc6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820a66d928d3c3f84e40a48a38672737eb8d2e01f9974a272d53248a2c61bb0d2c564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x130 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH6 0x6D656D656D65 PUSH1 0xD0 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x99 SWAP2 DUP2 PUSH2 0x135 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH2 0x4747 PUSH1 0xF0 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xC3 SWAP2 PUSH1 0x5 SWAP2 PUSH2 0x135 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0xF8277896582678AC000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x1CD JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x176 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1A3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1A3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST POP PUSH2 0x1AF SWAP3 SWAP2 POP PUSH2 0x1B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x132 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH2 0x1DC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820A66D928D3C3F84 0xE4 EXP 0x48 LOG3 DUP7 PUSH19 0x737EB8D2E01F9974A272D53248A2C61BB0D2C5 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "3514:4096:0:-;;;3844:244;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2729:17:0;2749:12;-1:-1:-1;;;;;2749:10:0;:12;:::i;:::-;2768:6;:18;;-1:-1:-1;;;;;;2768:18:0;-1:-1:-1;;;;;2768:18:0;;;;;;;2798:43;;2768:18;;-1:-1:-1;2768:18:0;2798:43;;2768:6;;2798:43;-1:-1:-1;3872:16:0;;;;;;;;;;;;;-1:-1:-1;;;3872:16:0;;;;;;;;;;;:::i;:::-;-1:-1:-1;3895:14:0;;;;;;;;;;;;;-1:-1:-1;;;3895:14:0;;;;;;;;;:7;;:14;:::i;:::-;-1:-1:-1;3916:9:0;:14;;-1:-1:-1;;3916:14:0;3928:2;3916:14;;;3952:27;3937:12;:42;;;3996:10;3916:9;3986:21;;;3916:14;3986:21;;;;;;;;:36;;;4036:46;;;;;;3996:10;;3916:9;;4036:46;;;;;;;;;;3514:4096;;1007:92;1083:10;1007:92;;:::o;3514:4096::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3514:4096:0;;;-1:-1:-1;3514:4096:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820a66d928d3c3f84e40a48a38672737eb8d2e01f9974a272d53248a2c61bb0d2c564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820A66D928D3C3F84 0xE4 EXP 0x48 LOG3 DUP7 PUSH19 0x737EB8D2E01F9974A272D53248A2C61BB0D2C5 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "3514:4096:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3514:4096:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4353:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4353:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4935:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4935:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4438:87;;;:::i;:::-;;;;;;;;;;;;;;;;5085:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5085:292:0;;;;;;;;;;;;;;;;;:::i;4179:79::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5383:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5383:200:0;;;;;;;;:::i;4531:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4531:106:0;-1:-1:-1;;;;;4531:106:0;;:::i;3047:130::-;;;:::i;:::-;;4094:79;;;:::i;:::-;;;;-1:-1:-1;;;;;4094:79:0;;;;;;;;;;;;;;2853:73;;;:::i;4264:83::-;;;:::i;5846:120::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5846:120:0;;:::i;5589:251::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5589:251:0;;;;;;;;:::i;4643:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4643:150:0;;;;;;;;:::i;4799:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4799:130:0;;;;;;;;;;:::i;3183:103::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3183:103:0;-1:-1:-1;;;;;3183:103:0;;:::i;4353:79::-;4421:5;4414:12;;;;;;;;-1:-1:-1;;4414:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4392:13;;4414:12;;4421:5;;4414:12;;4421:5;4414:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4353:79;:::o;4935:144::-;5003:4;5016:39;5025:12;:10;:12::i;:::-;5039:7;5048:6;5016:8;:39::i;:::-;-1:-1:-1;5069:4:0;4935:144;;;;:::o;4438:87::-;4507:12;;4438:87;:::o;5085:292::-;5176:4;5189:36;5199:6;5207:9;5218:6;5189:9;:36::i;:::-;5232:121;5241:6;5249:12;:10;:12::i;:::-;5263:89;5301:6;5263:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5263:19:0;;;;;;:11;:19;;;;;;5283:12;:10;:12::i;:::-;-1:-1:-1;;;;;5263:33:0;;;;;;;;;;;;-1:-1:-1;5263:33:0;;;:89;;:37;:89;:::i;:::-;5232:8;:121::i;:::-;-1:-1:-1;5367:4:0;5085:292;;;;;:::o;4179:79::-;4243:9;;;;4179:79;:::o;5383:200::-;5463:4;5476:83;5485:12;:10;:12::i;:::-;5499:7;5508:50;5547:10;5508:11;:25;5520:12;:10;:12::i;:::-;-1:-1:-1;;;;;5508:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5508:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;4531:106::-;-1:-1:-1;;;;;4613:18:0;4590:7;4613:18;;;:9;:18;;;;;;;4531:106::o;3047:130::-;2978:12;:10;:12::i;:::-;2968:6;;-1:-1:-1;;;;;2968:6:0;;;:22;;;2960:67;;;;;-1:-1:-1;;;2960:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3142:1;3126:6;;3105:40;;-1:-1:-1;;;;;3126:6:0;;;;3105:40;;3142:1;;3105:40;3169:1;3152:19;;-1:-1:-1;;;;;;3152:19:0;;;3047:130::o;4094:79::-;4137:7;4160;:5;:7::i;:::-;4153:14;;4094:79;:::o;2853:73::-;2891:7;2914:6;-1:-1:-1;;;;;2914:6:0;2853:73;:::o;4264:83::-;4334:7;4327:14;;;;;;;;-1:-1:-1;;4327:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4305:13;;4327:14;;4334:7;;4327:14;;4334:7;4327:14;;;;;;;;;;;;;;;;;;;;;;;;5846:120;5902:4;2978:12;:10;:12::i;:::-;2968:6;;-1:-1:-1;;;;;2968:6:0;;;:22;;;2960:67;;;;;-1:-1:-1;;;2960:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5915:27;5921:12;:10;:12::i;:::-;5935:6;5915:5;:27::i;:::-;-1:-1:-1;5956:4:0;5846:120;;;:::o;5589:251::-;5674:4;5687:129;5696:12;:10;:12::i;:::-;5710:7;5719:96;5758:15;5719:96;;;;;;;;;;;;;;;;;:11;:25;5731:12;:10;:12::i;:::-;-1:-1:-1;;;;;5719:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;5719:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4643:150::-;4714:4;4727:42;4737:12;:10;:12::i;:::-;4751:9;4762:6;4727:9;:42::i;4799:130::-;-1:-1:-1;;;;;4896:18:0;;;4873:7;4896:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4799:130::o;3183:103::-;2978:12;:10;:12::i;:::-;2968:6;;-1:-1:-1;;;;;2968:6:0;;;:22;;;2960:67;;;;;-1:-1:-1;;;2960:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:28;3271:8;3252:18;:28::i;:::-;3183:103;:::o;1007:92::-;1083:10;1007:92;:::o;7059:320::-;-1:-1:-1;;;;;7149:19:0;;7141:68;;;;-1:-1:-1;;;7141:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7224:21:0;;7216:68;;;;-1:-1:-1;;;7216:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7293:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7341:32;;;;;;;;;;;;;;;;;7059:320;;;:::o;5972:449::-;-1:-1:-1;;;;;6066:20:0;;6058:70;;;;-1:-1:-1;;;6058:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6143:23:0;;6135:71;;;;-1:-1:-1;;;6135:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6235;6257:6;6235:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6235:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;6215:17:0;;;;;;;:9;:17;;;;;;:91;;;;6336:20;;;;;;;:32;;6361:6;6336:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;6313:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;6380:35;;;;;;;6313:20;;6380:35;;;;;;;;;;;;;5972:449;;;:::o;1532:176::-;1618:7;1650:12;1642:6;;;;1634:29;;;;-1:-1:-1;;;1634:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1634:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1682:5:0;;;1532:176::o;1225:165::-;1283:7;1311:5;;;1331:6;;;;1323:46;;;;;-1:-1:-1;;;1323:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:1;1225:165;-1:-1:-1;;;1225:165:0:o;6427:290::-;-1:-1:-1;;;;;6499:21:0;;6491:65;;;;;-1:-1:-1;;;6491:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6580:12;;:24;;6597:6;6580:24;:16;:24;:::i;:::-;6565:12;:39;-1:-1:-1;;;;;6632:18:0;;;;;;:9;:18;;;;;;:30;;6655:6;6632:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6611:18:0;;;;;;:9;:18;;;;;;;;:51;;;;6674:37;;;;;;;6611:18;;;;6674:37;;;;;;;;;;6427:290;;:::o;3292:215::-;-1:-1:-1;;;;;3362:22:0;;3354:73;;;;-1:-1:-1;;;3354:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3460:6;;;3439:38;;-1:-1:-1;;;;;3439:38:0;;;;3460:6;;;3439:38;;;3484:6;:17;;-1:-1:-1;;;;;;3484:17:0;-1:-1:-1;;;;;3484:17:0;;;;;;;;;;3292:215::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1209",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24293",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "MSTORE"
								},
								{
									"begin": 3844,
									"end": 4088,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2729,
									"end": 2746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2761,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2749,
									"end": 2759,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 2749,
									"end": 2761,
									"name": "AND"
								},
								{
									"begin": 2749,
									"end": 2761,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2749,
									"end": 2761,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 2749,
									"end": 2761,
									"name": "JUMPDEST"
								},
								{
									"begin": 2768,
									"end": 2774,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "DUP1"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "DUP4"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "AND"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SWAP1"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "DUP2"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "OR"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "DUP3"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SSTORE"
								},
								{
									"begin": 2798,
									"end": 2841,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2798,
									"end": 2841,
									"name": "MLOAD"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SWAP3"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2768,
									"end": 2786,
									"name": "SWAP2"
								},
								{
									"begin": 2798,
									"end": 2841,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2798,
									"end": 2841,
									"name": "SWAP1"
								},
								{
									"begin": 2768,
									"end": 2774,
									"name": "DUP3"
								},
								{
									"begin": 2768,
									"end": 2774,
									"name": "SWAP1"
								},
								{
									"begin": 2798,
									"end": 2841,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP1"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "MLOAD"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP1"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP3"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "ADD"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP1"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP2"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "MSTORE"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP1"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP3"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "6D656D656D65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP1"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP3"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "ADD"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP2"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP3"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "MSTORE"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "SWAP2"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "DUP2"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 3872,
									"end": 3888,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP1"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "MLOAD"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP1"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP3"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "ADD"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP1"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP2"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "MSTORE"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP1"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP3"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4747"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP1"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP3"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "ADD"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP2"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "DUP3"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "MSTORE"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "SWAP2"
								},
								{
									"begin": 3895,
									"end": 3902,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3895,
									"end": 3902,
									"name": "SWAP2"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 3895,
									"end": 3909,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3916,
									"end": 3925,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "DUP1"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "AND"
								},
								{
									"begin": 3928,
									"end": 3930,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "OR"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "SWAP1"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "SSTORE"
								},
								{
									"begin": 3952,
									"end": 3979,
									"name": "PUSH",
									"value": "F8277896582678AC000000"
								},
								{
									"begin": 3937,
									"end": 3949,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 3937,
									"end": 3979,
									"name": "DUP2"
								},
								{
									"begin": 3937,
									"end": 3979,
									"name": "SWAP1"
								},
								{
									"begin": 3937,
									"end": 3979,
									"name": "SSTORE"
								},
								{
									"begin": 3996,
									"end": 4006,
									"name": "CALLER"
								},
								{
									"begin": 3916,
									"end": 3925,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "DUP2"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "DUP2"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "MSTORE"
								},
								{
									"begin": 3916,
									"end": 3930,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "SWAP1"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "DUP2"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "MSTORE"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "DUP1"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "DUP4"
								},
								{
									"begin": 3986,
									"end": 4007,
									"name": "KECCAK256"
								},
								{
									"begin": 3986,
									"end": 4022,
									"name": "DUP6"
								},
								{
									"begin": 3986,
									"end": 4022,
									"name": "SWAP1"
								},
								{
									"begin": 3986,
									"end": 4022,
									"name": "SSTORE"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "DUP1"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "MLOAD"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP5"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "DUP6"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "MSTORE"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "MLOAD"
								},
								{
									"begin": 3996,
									"end": 4006,
									"name": "SWAP3"
								},
								{
									"begin": 3996,
									"end": 4006,
									"name": "SWAP4"
								},
								{
									"begin": 3916,
									"end": 3925,
									"name": "SWAP2"
								},
								{
									"begin": 3916,
									"end": 3925,
									"name": "SWAP3"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP3"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "DUP2"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP1"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SUB"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP1"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP2"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "ADD"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "SWAP1"
								},
								{
									"begin": 4036,
									"end": 4082,
									"name": "LOG3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "JUMPDEST"
								},
								{
									"begin": 1083,
									"end": 1093,
									"name": "CALLER"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "JUMPDEST"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1007,
									"end": 1099,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SLOAD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "AND"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ISZERO"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "MUL"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SUB"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "AND"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DIV"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "MSTORE"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "KECCAK256"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DIV"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "LT"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPI"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "MLOAD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "NOT"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "AND"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP4"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "OR"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP6"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SSTORE"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP6"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SSTORE"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ISZERO"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPI"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "GT"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ISZERO"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPI"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "MLOAD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SSTORE"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "POP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SWAP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP3"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "GT"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ISZERO"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPI"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP2"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "SSTORE"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "ADD"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMP"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "JUMPDEST"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "DUP1"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "CODECOPY"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3514,
									"end": 7610,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a66d928d3c3f84e40a48a38672737eb8d2e01f9974a272d53248a2c61bb0d2c564736f6c63430005100032",
									".code": [
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "POP"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "LT"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "SHR"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "GT"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "GT"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMP"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMP"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "GT"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMP"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "EQ"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPI"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "JUMPDEST"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "DUP1"
										},
										{
											"begin": 3514,
											"end": 7610,
											"name": "REVERT"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MLOAD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MSTORE"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MLOAD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ADD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MSTORE"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MLOAD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ADD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP6"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ADD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ADD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ISZERO"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPI"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SUB"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MLOAD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP4"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SUB"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "EXP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SUB"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "NOT"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MSTORE"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "ADD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP3"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "MLOAD"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "DUP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP2"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SUB"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "RETURN"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "JUMPDEST"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "AND"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "JUMPDEST"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "DUP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "MLOAD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP2"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "ISZERO"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "ISZERO"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "DUP3"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "MSTORE"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "MLOAD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "DUP2"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SUB"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "ADD"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "RETURN"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "JUMPDEST"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "JUMPDEST"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "DUP1"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "MLOAD"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SWAP2"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "DUP3"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "MSTORE"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "MLOAD"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "DUP2"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SUB"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "ADD"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "RETURN"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "JUMPDEST"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "DUP1"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "DUP2"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "DUP2"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "AND"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "DUP2"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP2"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "AND"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP1"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "ADD"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "DUP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "MLOAD"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP3"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "AND"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "DUP3"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "MSTORE"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "MLOAD"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "DUP2"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SUB"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "ADD"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "RETURN"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "JUMPDEST"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "DUP1"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "DUP2"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "AND"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "SWAP1"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "ADD"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "JUMPDEST"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "DUP1"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "AND"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "JUMPDEST"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "JUMPDEST"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "STOP"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "JUMPDEST"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "JUMPDEST"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "DUP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP3"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "AND"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "DUP3"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "MSTORE"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "MLOAD"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "DUP2"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SUB"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "ADD"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "RETURN"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "JUMPDEST"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "JUMPDEST"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "DUP1"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "AND"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "DUP1"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "DUP2"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "AND"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "SWAP1"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "ADD"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "JUMPDEST"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "DUP1"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "DUP2"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "DUP2"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "AND"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "SWAP2"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "ADD"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "AND"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "JUMPDEST"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "DUP1"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SLOAD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MLOAD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP9"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "AND"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ISZERO"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP6"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "AND"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP5"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP5"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP5"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4392,
											"end": 4405,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4392,
											"end": 4405,
											"name": "SWAP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP3"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ISZERO"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPI"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "LT"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPI"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SLOAD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DIV"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MUL"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPDEST"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "KECCAK256"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPDEST"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SLOAD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "MSTORE"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP4"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "GT"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPI"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SUB"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "AND"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "DUP3"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "ADD"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP2"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "JUMPDEST"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "SWAP1"
										},
										{
											"begin": 4414,
											"end": 4426,
											"name": "POP"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "JUMPDEST"
										},
										{
											"begin": 5003,
											"end": 5007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5055,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5025,
											"end": 5035,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5025,
											"end": 5037,
											"name": "JUMPDEST"
										},
										{
											"begin": 5039,
											"end": 5046,
											"name": "DUP5"
										},
										{
											"begin": 5048,
											"end": 5054,
											"name": "DUP5"
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5016,
											"end": 5055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5016,
											"end": 5055,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5016,
											"end": 5055,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP3"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "SWAP2"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "POP"
										},
										{
											"begin": 4935,
											"end": 5079,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "JUMPDEST"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "SLOAD"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "SWAP1"
										},
										{
											"begin": 4438,
											"end": 4525,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "JUMPDEST"
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5225,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5199,
											"end": 5205,
											"name": "DUP5"
										},
										{
											"begin": 5207,
											"end": 5216,
											"name": "DUP5"
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP5"
										},
										{
											"begin": 5189,
											"end": 5198,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5189,
											"end": 5225,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5189,
											"end": 5225,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5189,
											"end": 5225,
											"name": "JUMPDEST"
										},
										{
											"begin": 5232,
											"end": 5353,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5241,
											"end": 5247,
											"name": "DUP5"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5249,
											"end": 5259,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "JUMPDEST"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP6"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "MLOAD"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "DUP1"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "ADD"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "DUP1"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "ADD"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "SWAP2"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "DUP11"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "AND"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "SWAP1"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5274,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "KECCAK256"
										},
										{
											"begin": 5263,
											"end": 5282,
											"name": "SWAP1"
										},
										{
											"begin": 5283,
											"end": 5295,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5283,
											"end": 5293,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5283,
											"end": 5295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5283,
											"end": 5295,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5283,
											"end": 5295,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "AND"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "DUP2"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "ADD"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "SWAP2"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "SWAP1"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "SWAP2"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "MSTORE"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "KECCAK256"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "SLOAD"
										},
										{
											"begin": 5263,
											"end": 5296,
											"name": "SWAP2"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "SWAP1"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "AND"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5263,
											"end": 5352,
											"name": "JUMPDEST"
										},
										{
											"begin": 5232,
											"end": 5240,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5232,
											"end": 5353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5353,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5232,
											"end": 5353,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP4"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "SWAP3"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "POP"
										},
										{
											"begin": 5085,
											"end": 5377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "JUMPDEST"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "SLOAD"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "AND"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "SWAP1"
										},
										{
											"begin": 4179,
											"end": 4258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5583,
											"name": "JUMPDEST"
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5559,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5485,
											"end": 5497,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5485,
											"end": 5497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5497,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 5485,
											"end": 5497,
											"name": "JUMPDEST"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5"
										},
										{
											"begin": 5508,
											"end": 5558,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5547,
											"end": 5557,
											"name": "DUP6"
										},
										{
											"begin": 5508,
											"end": 5519,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5520,
											"end": 5530,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP1"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP2"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "AND"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP3"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "MSTORE"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP1"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP4"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "ADD"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP4"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP1"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP4"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "MSTORE"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP2"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP3"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP1"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "DUP2"
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "KECCAK256"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "SWAP2"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "DUP13"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "AND"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "DUP2"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "MSTORE"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "SWAP3"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "MSTORE"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "SWAP1"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "KECCAK256"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "SLOAD"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "SWAP1"
										},
										{
											"begin": 5508,
											"end": 5558,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5508,
											"end": 5546,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5508,
											"end": 5558,
											"name": "AND"
										},
										{
											"begin": 5508,
											"end": 5558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "AND"
										},
										{
											"begin": 4590,
											"end": 4597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "SWAP1"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "DUP2"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "MSTORE"
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "MSTORE"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "SWAP1"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "KECCAK256"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "SLOAD"
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "SWAP1"
										},
										{
											"begin": 4531,
											"end": 4637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "JUMPDEST"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2978,
											"end": 2988,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMPDEST"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SWAP1"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "DUP2"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "SWAP2"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "EQ"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPI"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SUB"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "REVERT"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP1"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "SLOAD"
										},
										{
											"begin": 3105,
											"end": 3145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3145,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "SWAP1"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "SWAP2"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "AND"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "SWAP1"
										},
										{
											"begin": 3105,
											"end": 3145,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3105,
											"end": 3145,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "DUP4"
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "SWAP1"
										},
										{
											"begin": 3105,
											"end": 3145,
											"name": "LOG3"
										},
										{
											"begin": 3169,
											"end": 3170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "DUP1"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "AND"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "SWAP1"
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "SSTORE"
										},
										{
											"begin": 3047,
											"end": 3177,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "JUMPDEST"
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4167,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 4160,
											"end": 4165,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4160,
											"end": 4167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4160,
											"end": 4167,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 4160,
											"end": 4167,
											"name": "JUMPDEST"
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "SWAP1"
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "POP"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "SWAP1"
										},
										{
											"begin": 4094,
											"end": 4173,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "JUMPDEST"
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "AND"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2853,
											"end": 2926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4264,
											"end": 4347,
											"name": "JUMPDEST"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SLOAD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MLOAD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP9"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "AND"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ISZERO"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MUL"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP6"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "AND"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP5"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP5"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DIV"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP4"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP5"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DIV"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MUL"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP3"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP3"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MSTORE"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP3"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MSTORE"
										},
										{
											"begin": 4305,
											"end": 4318,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4305,
											"end": 4318,
											"name": "SWAP4"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP3"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "SWAP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP4"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "DUP3"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP3"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ISZERO"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "JUMPI"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "LT"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "JUMPI"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP1"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP4"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SLOAD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DIV"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MUL"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "DUP4"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "MSTORE"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "ADD"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "SWAP2"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4327,
											"end": 4341,
											"name": "JUMP"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "JUMPDEST"
										},
										{
											"begin": 5902,
											"end": 5906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2978,
											"end": 2988,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMPDEST"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SWAP1"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "DUP2"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "SWAP2"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "EQ"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPI"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SUB"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "REVERT"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPDEST"
										},
										{
											"begin": 5915,
											"end": 5942,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5921,
											"end": 5933,
											"name": "JUMPDEST"
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "DUP4"
										},
										{
											"begin": 5915,
											"end": 5920,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5915,
											"end": 5942,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5942,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5915,
											"end": 5942,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "SWAP2"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "SWAP1"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "POP"
										},
										{
											"begin": 5846,
											"end": 5966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5589,
											"end": 5840,
											"name": "JUMPDEST"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 5696,
											"end": 5706,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "JUMPDEST"
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP5"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "DUP6"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "MLOAD"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "DUP1"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "ADD"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "DUP1"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "DUP2"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "ADD"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "SWAP2"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "CODECOPY"
										},
										{
											"begin": 5719,
											"end": 5730,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5743,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5731,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5731,
											"end": 5743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5731,
											"end": 5743,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5731,
											"end": 5743,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP1"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP2"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "AND"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP3"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP1"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP4"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "ADD"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP4"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP1"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP4"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP2"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP3"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "SWAP1"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "DUP2"
										},
										{
											"begin": 5719,
											"end": 5744,
											"name": "KECCAK256"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "SWAP2"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "DUP14"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "AND"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "DUP2"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "SWAP3"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "MSTORE"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "SWAP1"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "KECCAK256"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "SLOAD"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "SWAP2"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "SWAP1"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5719,
											"end": 5757,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "AND"
										},
										{
											"begin": 5719,
											"end": 5815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4643,
											"end": 4793,
											"name": "JUMPDEST"
										},
										{
											"begin": 4714,
											"end": 4718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4769,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4737,
											"end": 4747,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "JUMPDEST"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP5"
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP5"
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4727,
											"end": 4769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "SWAP2"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP3"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "AND"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP2"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "MSTORE"
										},
										{
											"begin": 4896,
											"end": 4907,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP2"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "MSTORE"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP1"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP4"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "KECCAK256"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP4"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP5"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "AND"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "DUP3"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "MSTORE"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP2"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP2"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "MSTORE"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "KECCAK256"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SLOAD"
										},
										{
											"begin": 4896,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4799,
											"end": 4929,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "JUMPDEST"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 2978,
											"end": 2988,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "JUMPDEST"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "SWAP1"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "DUP2"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "SWAP2"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "AND"
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "EQ"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPI"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP3"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MSTORE"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "MLOAD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "DUP2"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SUB"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "REVERT"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2960,
											"end": 3027,
											"name": "JUMPDEST"
										},
										{
											"begin": 3252,
											"end": 3280,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3271,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 3252,
											"end": 3280,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3252,
											"end": 3280,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 3252,
											"end": 3280,
											"name": "JUMPDEST"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "POP"
										},
										{
											"begin": 3183,
											"end": 3286,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1007,
											"end": 1099,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1007,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1083,
											"end": 1093,
											"name": "CALLER"
										},
										{
											"begin": 1007,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7149,
											"end": 7168,
											"name": "DUP4"
										},
										{
											"begin": 7149,
											"end": 7168,
											"name": "AND"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "JUMPI"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "MSTORE"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP1"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP1"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP3"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SUB"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP3"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "MSTORE"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "MSTORE"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP1"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SWAP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "CODECOPY"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SWAP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "POP"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "POP"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "MLOAD"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "DUP1"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SWAP2"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SUB"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "SWAP1"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "REVERT"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 7141,
											"end": 7209,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7224,
											"end": 7245,
											"name": "DUP3"
										},
										{
											"begin": 7224,
											"end": 7245,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "JUMPI"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "MSTORE"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "ADD"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP1"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP1"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "ADD"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP3"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SUB"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP3"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "MSTORE"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "MSTORE"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "ADD"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP1"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SWAP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "CODECOPY"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "ADD"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SWAP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "POP"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "POP"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "MLOAD"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "DUP1"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SWAP2"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SUB"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "SWAP1"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "REVERT"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 7216,
											"end": 7284,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP1"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP5"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "AND"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP2"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP2"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "MSTORE"
										},
										{
											"begin": 7293,
											"end": 7304,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "SWAP1"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP2"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "MSTORE"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP1"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP4"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "KECCAK256"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP5"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "DUP8"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "AND"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "DUP1"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "DUP5"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "MSTORE"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP5"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "DUP3"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "MSTORE"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP2"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "DUP3"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "SWAP1"
										},
										{
											"begin": 7293,
											"end": 7320,
											"name": "KECCAK256"
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "DUP6"
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "SWAP1"
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "SSTORE"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "DUP6"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP3"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SUB"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7373,
											"name": "LOG3"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6066,
											"end": 6086,
											"name": "DUP4"
										},
										{
											"begin": 6066,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "JUMPI"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "MSTORE"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "ADD"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP1"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP1"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "ADD"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP3"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SUB"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP3"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "MSTORE"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "MSTORE"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "ADD"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP1"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SWAP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "CODECOPY"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "ADD"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SWAP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "MLOAD"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "DUP1"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SWAP2"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SUB"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "SWAP1"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "REVERT"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 6058,
											"end": 6128,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "DUP3"
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "AND"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "JUMPI"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "MSTORE"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "ADD"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP1"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP1"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "ADD"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP3"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SUB"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP3"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "MSTORE"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "MSTORE"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "ADD"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP1"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SWAP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "CODECOPY"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "ADD"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SWAP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "MLOAD"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "DUP1"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SWAP2"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SUB"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "SWAP1"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "REVERT"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 6135,
											"end": 6206,
											"name": "JUMPDEST"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "MLOAD"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "DUP1"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "DUP1"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "SWAP2"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "DUP7"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "KECCAK256"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SLOAD"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SWAP2"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6235,
											"end": 6256,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "AND"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 6235,
											"end": 6306,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "DUP1"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "DUP6"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "AND"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "SWAP1"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "DUP2"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "MSTORE"
										},
										{
											"begin": 6215,
											"end": 6224,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "MSTORE"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "DUP1"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "DUP3"
										},
										{
											"begin": 6215,
											"end": 6232,
											"name": "KECCAK256"
										},
										{
											"begin": 6215,
											"end": 6306,
											"name": "SWAP4"
										},
										{
											"begin": 6215,
											"end": 6306,
											"name": "SWAP1"
										},
										{
											"begin": 6215,
											"end": 6306,
											"name": "SWAP4"
										},
										{
											"begin": 6215,
											"end": 6306,
											"name": "SSTORE"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "SWAP1"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "DUP5"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "AND"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "DUP2"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "MSTORE"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "KECCAK256"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "SLOAD"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "SWAP1"
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP3"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6336,
											"end": 6360,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "AND"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP1"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP5"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "AND"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP2"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP2"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "MSTORE"
										},
										{
											"begin": 6313,
											"end": 6322,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "SWAP1"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP2"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "MSTORE"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "SWAP2"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "DUP3"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "SWAP1"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "KECCAK256"
										},
										{
											"begin": 6313,
											"end": 6368,
											"name": "SWAP5"
										},
										{
											"begin": 6313,
											"end": 6368,
											"name": "SWAP1"
										},
										{
											"begin": 6313,
											"end": 6368,
											"name": "SWAP5"
										},
										{
											"begin": 6313,
											"end": 6368,
											"name": "SSTORE"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "DUP1"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "MLOAD"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "DUP6"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "DUP2"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "MSTORE"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP1"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "MLOAD"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "SWAP2"
										},
										{
											"begin": 6313,
											"end": 6333,
											"name": "SWAP4"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP3"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "DUP8"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "AND"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP3"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP3"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP2"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "DUP3"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP1"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SUB"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "ADD"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "SWAP1"
										},
										{
											"begin": 6380,
											"end": 6415,
											"name": "LOG3"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 6421,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1708,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1532,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1618,
											"end": 1625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "DUP2"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "DUP5"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "DUP5"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "GT"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "ISZERO"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMPI"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP3"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP3"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP4"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MLOAD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MLOAD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP4"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "AND"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ISZERO"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMPI"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP3"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MLOAD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP4"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "EXP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "NOT"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "AND"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MSTORE"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "ADD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMPDEST"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP3"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "POP"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "MLOAD"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "DUP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP2"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SUB"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "SWAP1"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "REVERT"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1682,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1682,
											"end": 1687,
											"name": "SUB"
										},
										{
											"begin": 1682,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1708,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1225,
											"end": 1390,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1225,
											"end": 1390,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP3"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP3"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "ADD"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP4"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "LT"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "JUMPI"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP1"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP2"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MSTORE"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP3"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "ADD"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MSTORE"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP3"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "ADD"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MSTORE"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP3"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "ADD"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MSTORE"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "MLOAD"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "DUP2"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "SUB"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "ADD"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "REVERT"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 1323,
											"end": 1369,
											"name": "JUMPDEST"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "SWAP4"
										},
										{
											"begin": 1225,
											"end": 1390,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1225,
											"end": 1390,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6427,
											"end": 6717,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 6427,
											"end": 6717,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "DUP3"
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "AND"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "JUMPI"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP1"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP2"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MSTORE"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP3"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "ADD"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MSTORE"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP3"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "ADD"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MSTORE"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP3"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "ADD"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MSTORE"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "SWAP1"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "MLOAD"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "SWAP1"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "DUP2"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "SWAP1"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "SUB"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "ADD"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "SWAP1"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "REVERT"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 6491,
											"end": 6556,
											"name": "JUMPDEST"
										},
										{
											"begin": 6580,
											"end": 6592,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6580,
											"end": 6592,
											"name": "SLOAD"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "SWAP1"
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP3"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6580,
											"end": 6596,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "AND"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 6580,
											"end": 6604,
											"name": "JUMPDEST"
										},
										{
											"begin": 6565,
											"end": 6577,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6565,
											"end": 6604,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "DUP3"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "AND"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "SWAP1"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "DUP2"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "MSTORE"
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "MSTORE"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "SWAP1"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "KECCAK256"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "SLOAD"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "DUP3"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6632,
											"end": 6654,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "AND"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP4"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "AND"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP2"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP2"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "MSTORE"
										},
										{
											"begin": 6611,
											"end": 6620,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "SWAP1"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP2"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "MSTORE"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP1"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP4"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "KECCAK256"
										},
										{
											"begin": 6611,
											"end": 6662,
											"name": "SWAP5"
										},
										{
											"begin": 6611,
											"end": 6662,
											"name": "SWAP1"
										},
										{
											"begin": 6611,
											"end": 6662,
											"name": "SWAP5"
										},
										{
											"begin": 6611,
											"end": 6662,
											"name": "SSTORE"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "DUP4"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "MLOAD"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "DUP6"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "DUP2"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "MSTORE"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP4"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "MLOAD"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "SWAP3"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "SWAP4"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "SWAP2"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "SWAP3"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP3"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "DUP2"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP1"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SUB"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP1"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP2"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "ADD"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "SWAP1"
										},
										{
											"begin": 6674,
											"end": 6711,
											"name": "LOG3"
										},
										{
											"begin": 6427,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6427,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6427,
											"end": 6717,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3292,
											"end": 3507,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 3292,
											"end": 3507,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3362,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3362,
											"end": 3384,
											"name": "AND"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "JUMPI"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "MSTORE"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "ADD"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP1"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP1"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "ADD"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP3"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SUB"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP3"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "MSTORE"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "MSTORE"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "ADD"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP1"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SWAP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "CODECOPY"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "ADD"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SWAP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "POP"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "POP"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "MLOAD"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "DUP1"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SWAP2"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SUB"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "SWAP1"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "REVERT"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 3354,
											"end": 3427,
											"name": "JUMPDEST"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP1"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SLOAD"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "DUP1"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "DUP6"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "AND"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "SWAP4"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SWAP3"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "AND"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SWAP2"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "SWAP2"
										},
										{
											"begin": 3439,
											"end": 3477,
											"name": "LOG3"
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "DUP1"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP3"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP1"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP3"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "AND"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP2"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP1"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP2"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "OR"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SWAP1"
										},
										{
											"begin": 3484,
											"end": 3501,
											"name": "SSTORE"
										},
										{
											"begin": 3292,
											"end": 3507,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token.sol\":{\"keccak256\":\"0x60eac11e0304f111068dbf9a7f13cf34b415e8660122ba5bac9b4a0d3867054c\",\"urls\":[\"bzz-raw://ac71af7ba402df47b81a083457b9c3abf6ecd51b2958192af00f6d994b78a69f\",\"dweb:/ipfs/QmXUJgUTgv6wnv9bBoag4vC5s51nFWsktoRbV1YmbutTCb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 303,
								"contract": "Token.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 418,
								"contract": "Token.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 424,
								"contract": "Token.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 426,
								"contract": "Token.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 428,
								"contract": "Token.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 430,
								"contract": "Token.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 432,
								"contract": "Token.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token.sol\":{\"keccak256\":\"0x60eac11e0304f111068dbf9a7f13cf34b415e8660122ba5bac9b4a0d3867054c\",\"urls\":[\"bzz-raw://ac71af7ba402df47b81a083457b9c3abf6ecd51b2958192af00f6d994b78a69f\",\"dweb:/ipfs/QmXUJgUTgv6wnv9bBoag4vC5s51nFWsktoRbV1YmbutTCb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token.sol\":{\"keccak256\":\"0x60eac11e0304f111068dbf9a7f13cf34b415e8660122ba5bac9b4a0d3867054c\",\"urls\":[\"bzz-raw://ac71af7ba402df47b81a083457b9c3abf6ecd51b2958192af00f6d994b78a69f\",\"dweb:/ipfs/QmXUJgUTgv6wnv9bBoag4vC5s51nFWsktoRbV1YmbutTCb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token.sol\":{\"keccak256\":\"0x60eac11e0304f111068dbf9a7f13cf34b415e8660122ba5bac9b4a0d3867054c\",\"urls\":[\"bzz-raw://ac71af7ba402df47b81a083457b9c3abf6ecd51b2958192af00f6d994b78a69f\",\"dweb:/ipfs/QmXUJgUTgv6wnv9bBoag4vC5s51nFWsktoRbV1YmbutTCb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 303,
								"contract": "Token.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Token.sol\":1203:2542  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token.sol\":1203:2542  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820937d75a77193513ff7f50ca0b60ce9b054bae1001d517fa0a24578e8f33e0f0f64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820937d75a77193513ff7f50ca0b60ce9b054bae1001d517fa0a24578e8f33e0f0f64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP4 PUSH30 0x75A77193513FF7F50CA0B60CE9B054BAE1001D517FA0A24578E8F33E0F0F PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "1203:1339:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820937d75a77193513ff7f50ca0b60ce9b054bae1001d517fa0a24578e8f33e0f0f64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP4 PUSH30 0x75A77193513FF7F50CA0B60CE9B054BAE1001D517FA0A24578E8F33E0F0F PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "1203:1339:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1203,
									"end": 2542,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1203,
									"end": 2542,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820937d75a77193513ff7f50ca0b60ce9b054bae1001d517fa0a24578e8f33e0f0f64736f6c63430005100032",
									".code": [
										{
											"begin": 1203,
											"end": 2542,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "ADDRESS"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "EQ"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 2542,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token.sol\":{\"keccak256\":\"0x60eac11e0304f111068dbf9a7f13cf34b415e8660122ba5bac9b4a0d3867054c\",\"urls\":[\"bzz-raw://ac71af7ba402df47b81a083457b9c3abf6ecd51b2958192af00f6d994b78a69f\",\"dweb:/ipfs/QmXUJgUTgv6wnv9bBoag4vC5s51nFWsktoRbV1YmbutTCb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Token.sol": {
				"ast": {
					"absolutePath": "Token.sol",
					"exportedSymbols": {
						"BEP20Token": [
							900
						],
						"Context": [
							114
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							405
						],
						"SafeMath": [
							299
						]
					},
					"id": 901,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "128:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "127:9:0"
									},
									"scope": 88,
									"src": "82:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "184:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:7:0"
									},
									"scope": 88,
									"src": "141:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "236:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "236:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:15:0"
									},
									"scope": 88,
									"src": "195:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "294:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "293:15:0"
									},
									"scope": 88,
									"src": "255:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "355:9:0"
									},
									"scope": 88,
									"src": "313:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "428:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:0"
									},
									"scope": 88,
									"src": "369:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "459:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "458:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "512:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "511:6:0"
									},
									"scope": 88,
									"src": "441:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "557:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "540:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "596:9:0"
									},
									"scope": 88,
									"src": "522:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "627:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "626:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:6:0"
									},
									"scope": 88,
									"src": "610:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "726:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "709:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 88,
									"src": "688:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "806:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "828:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:57:0"
									},
									"src": "791:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "882:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "905:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "881:63:0"
									},
									"src": "867:78:0"
								}
							],
							"scope": 901,
							"src": "60:888:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "998:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:0"
									},
									"scope": 114,
									"src": "974:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1069:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "1083:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1083:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "1076:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1051:17:0"
									},
									"scope": 114,
									"src": "1007:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1162:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 931,
													"src": "1169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$114",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1169:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "1182:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1182:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1182:8:0"
											}
										]
									},
									"documentation": null,
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1148:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1148:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1147:14:0"
									},
									"scope": 114,
									"src": "1105:91:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "952:247:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1292:98:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "1299:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1311:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1315:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1299:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1331:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1331:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1339:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "1323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1323:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1323:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 136,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 124,
													"src": "1383:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 122,
												"id": 137,
												"nodeType": "Return",
												"src": "1376:8:0"
											}
										]
									},
									"documentation": null,
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1238:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1249:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1237:22:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1282:9:0"
									},
									"scope": 299,
									"src": "1225:165:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1463:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 149,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1481:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 150,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1484:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1487:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 148,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															155,
															182
														],
														"referencedDeclaration": 182,
														"src": "1477:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1477:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 153,
												"nodeType": "Return",
												"src": "1470:50:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1408:22:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1454:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1453:9:0"
									},
									"scope": 299,
									"src": "1396:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1627:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "1642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 168,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1642:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 170,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1650:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "1634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1634:29:0"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "1670:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1682:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1686:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1670:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 179,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1701:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 180,
												"nodeType": "Return",
												"src": "1694:8:0"
											}
										]
									},
									"documentation": null,
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1556:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1567:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1544:50:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1617:9:0"
									},
									"scope": 299,
									"src": "1532:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1781:153:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 191,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1797:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1792:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 197,
												"nodeType": "IfStatement",
												"src": "1788:37:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "1800:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1816:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 190,
															"id": 195,
															"nodeType": "Return",
															"src": "1809:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1833:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1833:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 206,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1865:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "1857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1857:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 213,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 199,
													"src": "1927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 214,
												"nodeType": "Return",
												"src": "1920:8:0"
											}
										]
									},
									"documentation": null,
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1738:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1726:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:9:0"
									},
									"scope": 299,
									"src": "1714:220:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2007:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 226,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2025:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 227,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2028:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2031:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 225,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															232,
															259
														],
														"referencedDeclaration": 259,
														"src": "2021:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 230,
												"nodeType": "Return",
												"src": "2014:46:0"
											}
										]
									},
									"documentation": null,
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1952:22:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:9:0"
									},
									"scope": 299,
									"src": "1940:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2167:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2182:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 247,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "2174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2174:28:0"
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "2209:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 255,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 253,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2225:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2209:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 256,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 251,
													"src": "2240:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 257,
												"nodeType": "Return",
												"src": "2233:8:0"
											}
										]
									},
									"documentation": null,
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2085:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2096:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2107:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 237,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2084:50:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2157:9:0"
									},
									"scope": 299,
									"src": "2072:175:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2320:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 269,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2338:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 270,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2341:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2344:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 268,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															275,
															298
														],
														"referencedDeclaration": 298,
														"src": "2334:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 267,
												"id": 273,
												"nodeType": "Return",
												"src": "2327:44:0"
											}
										]
									},
									"documentation": null,
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2266:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2277:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2265:22:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2311:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2310:9:0"
									},
									"scope": 299,
									"src": "2253:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2478:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "2493:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2498:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2493:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 290,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "2501:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "2485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2485:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "2485:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2528:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2528:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 296,
												"nodeType": "Return",
												"src": "2521:12:0"
											}
										]
									},
									"documentation": null,
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2396:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2407:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2418:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2418:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2395:50:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2469:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2468:9:0"
									},
									"scope": 299,
									"src": "2383:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "1203:1339:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 300,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 114,
										"src": "2566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$114",
											"typeString": "contract Context"
										}
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "2566:7:0"
								}
							],
							"contractDependencies": [
								114
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405,
								114
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 303,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "2579:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 302,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2579:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 309,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2635:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2666:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2634:57:0"
									},
									"src": "2608:84:0"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2722:125:0",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "2729:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2729:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2749:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2729:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2768:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 318,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2777:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2768:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "2768:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2827:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2819:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 325,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 321,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2798:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "2793:48:0"
											}
										]
									},
									"documentation": null,
									"id": 329,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2722:0:0"
									},
									"scope": 405,
									"src": "2698:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2900:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 334,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "2914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 333,
												"id": 335,
												"nodeType": "Return",
												"src": "2907:13:0"
											}
										]
									},
									"documentation": null,
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:2:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2890:9:0"
									},
									"scope": 405,
									"src": "2853:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "2953:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 340,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "2968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "2978:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2978:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2968:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2992:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "2960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2960:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "2960:67:0"
											},
											{
												"id": 347,
												"nodeType": "PlaceholderStatement",
												"src": "3034:1:0"
											}
										]
									},
									"documentation": null,
									"id": 349,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2950:2:0"
									},
									"src": "2932:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "3093:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 355,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3142:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3134:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 354,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3105:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "EmitStatement",
												"src": "3100:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 361,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3152:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3169:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3161:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3152:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "3152:19:0"
											}
										]
									},
									"documentation": null,
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 352,
											"modifierName": {
												"argumentTypes": null,
												"id": 351,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 349,
												"src": "3083:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3083:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3073:2:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3093:0:0"
									},
									"scope": 405,
									"src": "3047:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "3245:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 376,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3271:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3252:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3252:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "3252:28:0"
											}
										]
									},
									"documentation": null,
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 373,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 349,
												"src": "3235:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3235:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3210:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:18:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3245:0:0"
									},
									"scope": 405,
									"src": "3183:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3347:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 386,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "3362:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3382:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3374:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3362:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3386:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "3354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3354:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "3354:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 395,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3468:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 394,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "3439:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "EmitStatement",
												"src": "3434:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3484:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 400,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "3493:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3484:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3484:17:0"
											}
										]
									},
									"documentation": null,
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3320:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3319:18:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:0:0"
									},
									"scope": 405,
									"src": "3292:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "2546:964:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 406,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 114,
										"src": "3537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$114",
											"typeString": "contract Context"
										}
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "3537:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 408,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "3546:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "3546:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 410,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 405,
										"src": "3554:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$405",
											"typeString": "contract Ownable"
										}
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "3554:7:0"
								}
							],
							"contractDependencies": [
								88,
								114,
								405
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 900,
							"linearizedBaseContracts": [
								900,
								405,
								88,
								114
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 414,
									"libraryName": {
										"contractScope": null,
										"id": 412,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 299,
										"src": "3573:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$299",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "3567:27:0",
									"typeName": {
										"id": 413,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3586:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 418,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3600:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 417,
										"keyType": {
											"id": 415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3609:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3600:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3620:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 424,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3653:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 423,
										"keyType": {
											"id": 419,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3662:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3653:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 422,
											"keyType": {
												"id": 420,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3682:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3673:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 421,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3693:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 426,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3729:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3729:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 428,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3762:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 427,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3762:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 430,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3790:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 429,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3790:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 432,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 900,
									"src": "3817:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 431,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3817:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3865:223:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "3872:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6d656d656d65",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3880:8:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e2ee2b72f4ebac48b367b9706833e3bbffe4de39f50b7f03f54e6e2a5e83f5c7",
															"typeString": "literal_string \"mememe\""
														},
														"value": "mememe"
													},
													"src": "3872:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "3872:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4747",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3905:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_1be70c3165ef7ff3b635a325c983f6d83ef0eae52bf2e49eb109547f820cab55",
															"typeString": "literal_string \"GG\""
														},
														"value": "GG"
													},
													"src": "3895:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "3895:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "3916:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3928:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3916:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "3916:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "3937:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "333030303030303030303030303030303030303030303030303030",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3952:27:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
															"typeString": "int_const 300000000000000000000000000"
														},
														"value": "300000000000000000000000000"
													},
													"src": "3937:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3937:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 451,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 454,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3996:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3996:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3986:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 455,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "4010:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3986:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "3986:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4053:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4045:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "4057:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4057:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 464,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "4069:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 458,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "4036:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "4031:51:0"
											}
										]
									},
									"documentation": null,
									"id": 468,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3855:2:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3865:0:0"
									},
									"scope": 900,
									"src": "3844:244:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4146:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 473,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "4160:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "4153:14:0"
											}
										]
									},
									"documentation": null,
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4111:2:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4137:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4136:9:0"
									},
									"scope": 900,
									"src": "4094:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4229:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 482,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "4243:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "4236:16:0"
											}
										]
									},
									"documentation": null,
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:2:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4222:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 479,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4221:7:0"
									},
									"scope": 900,
									"src": "4179:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "4320:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 490,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 430,
													"src": "4334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "4327:14:0"
											}
										]
									},
									"documentation": null,
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4279:2:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4305:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4305:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4304:15:0"
									},
									"scope": 900,
									"src": "4264:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4407:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 432,
													"src": "4421:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 497,
												"id": 499,
												"nodeType": "Return",
												"src": "4414:12:0"
											}
										]
									},
									"documentation": null,
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4366:2:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4392:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4392:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4391:15:0"
									},
									"scope": 900,
									"src": "4353:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "4493:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 506,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "4507:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "4500:19:0"
											}
										]
									},
									"documentation": null,
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4458:2:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "4484:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4483:9:0"
									},
									"scope": 900,
									"src": "4438:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "4599:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "4613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 518,
													"indexExpression": {
														"argumentTypes": null,
														"id": 517,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "4623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4613:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 519,
												"nodeType": "Return",
												"src": "4606:25:0"
											}
										]
									},
									"documentation": null,
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4550:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4549:17:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4590:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4589:9:0"
									},
									"scope": 900,
									"src": "4531:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4720:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "4737:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4737:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4751:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4727:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "4727:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4783:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 529,
												"id": 538,
												"nodeType": "Return",
												"src": "4776:11:0"
											}
										]
									},
									"documentation": null,
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4661:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4660:35:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4714:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4713:6:0"
									},
									"scope": 900,
									"src": "4643:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4882:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4896:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 551,
														"indexExpression": {
															"argumentTypes": null,
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4908:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4896:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 553,
													"indexExpression": {
														"argumentTypes": null,
														"id": 552,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4896:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 554,
												"nodeType": "Return",
												"src": "4889:34:0"
											}
										]
									},
									"documentation": null,
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4833:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4817:32:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4873:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4872:9:0"
									},
									"scope": 900,
									"src": "4799:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5009:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 566,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5025:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5025:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5048:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5016:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5016:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "5016:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5069:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 564,
												"id": 573,
												"nodeType": "Return",
												"src": "5062:11:0"
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4951:33:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5003:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5002:6:0"
									},
									"scope": 900,
									"src": "4935:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "5182:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 587,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5199:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5207:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5218:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5189:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5189:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "5189:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 593,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 594,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5249:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5249:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 603,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5301:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5309:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "5263:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 598,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 597,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 577,
																			"src": "5275:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5263:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 601,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 599,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "5283:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5283:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5263:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "5263:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5263:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5232:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5232:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5367:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 585,
												"id": 609,
												"nodeType": "Return",
												"src": "5360:11:0"
											}
										]
									},
									"documentation": null,
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5107:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5123:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5142:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5106:51:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5176:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5175:6:0"
									},
									"scope": 900,
									"src": "5085:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "5469:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5485:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5485:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "5499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 631,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "5547:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 624,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "5508:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 627,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 625,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "5520:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5520:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5508:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 629,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 628,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5534:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5508:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 139,
																"src": "5508:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5508:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5476:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5476:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "5476:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5573:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 636,
												"nodeType": "Return",
												"src": "5566:11:0"
											}
										]
									},
									"documentation": null,
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5410:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5409:37:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5463:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5463:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5462:6:0"
									},
									"scope": 900,
									"src": "5383:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "5680:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 648,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5696:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5696:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 650,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 658,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "5758:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5775:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 651,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "5719:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 654,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 652,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "5731:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5731:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5719:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 656,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 655,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "5745:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5719:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "5719:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5719:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5687:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "5687:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5830:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 646,
												"id": 664,
												"nodeType": "Return",
												"src": "5823:11:0"
											}
										]
									},
									"documentation": null,
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5633:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:42:0"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5674:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5673:6:0"
									},
									"scope": 900,
									"src": "5589:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "5908:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "5921:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5921:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5935:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "5915:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5915:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "5915:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5956:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 674,
												"id": 682,
												"nodeType": "Return",
												"src": "5949:11:0"
											}
										]
									},
									"documentation": null,
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 671,
											"modifierName": {
												"argumentTypes": null,
												"id": 670,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 349,
												"src": "5883:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5883:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5859:16:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5902:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5901:6:0"
									},
									"scope": 900,
									"src": "5846:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "6051:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 694,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "6066:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6084:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6076:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6066:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6088:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "6058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6058:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "6058:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 703,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "6143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6164:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6156:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6156:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6143:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6168:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "6135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6135:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "6135:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6215:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 713,
														"indexExpression": {
															"argumentTypes": null,
															"id": 712,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "6225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6215:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 718,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6257:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6265:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "6235:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 716,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6245:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6235:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "6235:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6235:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6215:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "6215:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6313:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"argumentTypes": null,
															"id": 724,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6323:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6313:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 730,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "6336:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 728,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 727,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "6346:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6336:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "6336:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6336:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6313:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "6313:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 735,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "6389:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6397:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6408:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6380:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6380:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "6375:40:0"
											}
										]
									},
									"documentation": null,
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "5991:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6007:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "6026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5990:51:0"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6051:0:0"
									},
									"scope": 900,
									"src": "5972:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "6484:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 749,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "6499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6518:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6510:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6510:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6499:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6522:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "6491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6491:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "6491:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 757,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "6565:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 760,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "6597:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 758,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "6580:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "6580:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6580:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6565:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6565:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 764,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6611:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 766,
														"indexExpression": {
															"argumentTypes": null,
															"id": 765,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "6621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6611:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 771,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "6655:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "6632:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "6642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6632:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "6632:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6632:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6611:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "6611:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6691:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6683:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6683:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "6695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 780,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "6704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "6674:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6674:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "EmitStatement",
												"src": "6669:42:0"
											}
										]
									},
									"documentation": null,
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "6442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "6459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:33:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6484:0:0"
									},
									"scope": 900,
									"src": "6427:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "6780:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "6795:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6814:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6806:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6795:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6818:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "6787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6787:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "6787:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6863:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6863:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6915:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "6884:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "6894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6884:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "6884:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6884:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6863:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "6863:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 812,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "6959:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 815,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6991:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 813,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "6974:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "6974:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6974:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6959:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "6959:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7036:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7028:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7028:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "7040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7010:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7010:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "EmitStatement",
												"src": "7005:42:0"
											}
										]
									},
									"documentation": null,
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "6738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "6755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6737:33:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6780:0:0"
									},
									"scope": 900,
									"src": "6723:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7134:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 838,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "7149:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7166:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7158:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7149:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7170:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "7141:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7141:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "7141:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 847,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "7224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7243:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7235:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7235:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7224:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7247:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															919
														],
														"referencedDeclaration": 919,
														"src": "7216:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7216:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "7216:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "7293:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 858,
															"indexExpression": {
																"argumentTypes": null,
																"id": 856,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "7305:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7293:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 859,
														"indexExpression": {
															"argumentTypes": null,
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7293:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 860,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "7323:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7293:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "7293:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 864,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 865,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7357:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 866,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "7366:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "7341:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7341:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "EmitStatement",
												"src": "7336:37:0"
											}
										]
									},
									"documentation": null,
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7077:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7092:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7076:48:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 900,
									"src": "7059:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "7446:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 878,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 879,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "7468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "7453:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7453:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "7453:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 884,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "7500:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7500:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 893,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "7553:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7561:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 886,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "7514:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 888,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 887,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "7526:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7514:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 891,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 889,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "7535:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7535:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7514:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "7514:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7514:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "7482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7482:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "7482:119:0"
											}
										]
									},
									"documentation": null,
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "7404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "7421:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7403:33:0"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7446:0:0"
									},
									"scope": 900,
									"src": "7385:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 901,
							"src": "3514:4096:0"
						}
					],
					"src": "33:7581:0"
				},
				"id": 0
			}
		}
	}
}